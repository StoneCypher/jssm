name: Full publish pipeline

on: [push]

jobs:



  build:

    strategy:
      matrix:
        include:
          - node-version: 18.x   # fastest, so run first, to error fast
            os: ubuntu-latest
          - node-version: 18.x   # slowest, so run next. sort by slowest from here to get earliest end through parallelism
            os: macos-latest
          - node-version: 18.x   # finish check big-3 on latest current
            os: windows-latest
          - node-version: 11.x  # lastly check just ubuntu on historic node versions because speed, oldest (slowest) first
            os: ubuntu-latest
          - node-version: 12.x
            os: ubuntu-latest
          - node-version: 13.x
            os: ubuntu-latest
          - node-version: 14.x
            os: ubuntu-latest
          - node-version: 15.x
            os: ubuntu-latest
          - node-version: 16.x
            os: ubuntu-latest
          - node-version: 17.x
            os: ubuntu-latest

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install, build, and test
      run: |
        npm install && npm run ci_build
      env:
        CI: true
    - name: Coveralls GitHub Action
      uses: coverallsapp/github-action@v1.0.1
      with:
        github-token: ${{ secrets.github_token }}
        path-to-lcov: ./coverage/spec/lcov.info



  benchmark:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 18.x
      uses: actions/setup-node@v1
      with:
        node-version: 18.x

    - name: Verify the version was bumped
      run: |
        npm install && npm run benny



  verify-version-bump:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 18.x
      uses: actions/setup-node@v1
      with:
        node-version: 18.x

    - name: Verify the version was bumped
      run: |
        npm install
        git config --global user.email "stonecypher@users.noreply.github.com"
        git config --global user.name "John Haugeland through Github Actions"
        node ./src/buildjs/verify_version_bump.js



  release:

    if: (github.event.pusher.name == github.event.repository.owner.name) && (github.ref == 'refs/heads/main')

    needs: [build, verify-version-bump]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Export tag to envvars
      run: |
        export TAG=$(awk -F'"' '/"version": ".+"/{ print $4; exit; }' package.json)
        echo "TAG=$TAG" >> $GITHUB_ENV
        echo $TAG

    # - name: Export commit message to envvars
    #   run: |
    #     export COMMITMESSAGE="$(git log -1 --pretty=format:%B)"
    #     echo "\nCOMMITMESSAGE=\"$COMMITMESSAGE\"" >> $GITHUB_ENV
    #     echo $COMMITMESSAGE

    - name: Export commit message to outputs
      run: |
        echo "::set-output name=COMMIT_MSG::$(git log -1 --pretty=format:%B)"
        echo "${{ steps.release.outputs.COMMIT_MSG }}"

    - name: Use Node.js 18.x
      uses: actions/setup-node@v1
      with:
        node-version: 18.x
        registry-url: https://registry.npmjs.org/

    - name: Push tags
      run: git push origin --tags

    - name: Create the release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG }}
        release_name: ${{ env.TAG }}
        body_path: CHANGELOG.md

    - name: Publish to npm
      run: |
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.JSSM_PUBLISH_TOKEN_FOR_GH_CI_CD }}

    - name: Tweet notice
      run: |
        npm install && node ./src/buildjs/tweet.js "Released ${{ env.TAG }} - ${{ steps.release.outputs.COMMIT_MSG }}"
      env:
        JSSM_TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.JSSM_TWITTER_ACCESS_TOKEN_SECRET }}
        JSSM_TWITTER_API_ACCESS_TOKEN: ${{ secrets.JSSM_TWITTER_API_ACCESS_TOKEN }}
        JSSM_TWITTER_API_KEY: ${{ secrets.JSSM_TWITTER_API_KEY }}
        JSSM_TWITTER_API_SECRET: ${{ secrets.JSSM_TWITTER_API_SECRET }}



  bump-jssm-viz:

    needs: [release]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Export tag to envvars
      run: |
        export TAG=$(awk -F'"' '/"version": ".+"/{ print $4; exit; }' package.json)
        echo "TAG=$TAG" >> $GITHUB_ENV

    - name: CURL RPC to jssm-viz action
      run: |
        curl -X POST "https://api.github.com/repos/StoneCypher/jssm-viz/dispatches" -H 'Accept: application/vnd.github.everest-preview+json' -u ${{ secrets.JSSM_UPGRADE_PERSONAL_ACCESS_TOKEN }} --data '{"event_type": "upgrade_jssm", "client_payload": { "lib_version": "${{ env.TAG }}" }}'



  finish:

    needs: [bump-jssm-viz]

    runs-on: ubuntu-latest

    steps:
    - name: Results page
      run: echo '### Results!\n\n* Published to NPM\n* Bumped `jssm-viz`\n* Bumped `jssm-viz-demo`' >> $GITHUB_STEP_SUMMARY
